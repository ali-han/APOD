name: Fetch Random APOD Data

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'  # Her saat başı çalışır

jobs:
  fetch_apod:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install requests

      - name: Fetch and save random APOD data
        id: fetch_data
        run: |
          python -c "
          import requests
          import random
          import os
          import json
          from datetime import datetime, timedelta

          # Bugünün tarihi
          end_date = datetime.now()
          # 2010 yılı başlangıç
          start_date = datetime(2010, 1, 1)
          
          # Rastgele tarih seç (2010-bugün arası)
          delta = end_date - start_date
          random_days = random.randint(0, delta.days)
          random_date = start_date + timedelta(days=random_days)
          date_str = random_date.strftime('%Y-%m-%d')
          time_str = random_date.strftime('%H:%M:%S')

          # API'den veri çek
          url = f'https://api.nasa.gov/planetary/apod?date={date_str}&api_key=DEMO_KEY'
          response = requests.get(url)
          
          if response.status_code == 200:
              data = response.json()
              
              # Dizin yapısını oluştur (YYYY/MM)
              dir_path = f'apod_data/{random_date.year}/{random_date.month:02d}'
              os.makedirs(dir_path, exist_ok=True)
              
              # JSON dosyasını DD.json olarak kaydet
              file_path = f'{dir_path}/{random_date.day:02d}.json'
              with open(file_path, 'w') as f:
                  json.dump(data, f, indent=2)
              
              # Commit tarihi için çıktı oluştur
              print(f'::set-output name=commit_date::{date_str} {time_str}')
              print(f'Successfully saved APOD data as {file_path}')
          else:
              print(f'Error fetching data for {date_str}: {response.status_code}')
              exit(1)
          "

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add apod_data/
          GIT_COMMITTER_DATE="${{ steps.fetch_data.outputs.commit_date }}" \
          git commit --date="${{ steps.fetch_data.outputs.commit_date }}" \
          -m "Add APOD data for ${{ steps.fetch_data.outputs.commit_date }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}