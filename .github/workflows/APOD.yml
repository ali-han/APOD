name: Fetch Random APOD Data

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

jobs:
  fetch_apod:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install requests

      - name: Fetch and save random APOD data
        id: fetch_data
        run: |
          python -c "
          import requests
          import random
          import os
          import json
          from datetime import datetime, timedelta
          import glob

          # Rastgele APOD verisini çek
          end_date = datetime.now()
          start_date = datetime(2010, 1, 1)
          delta = end_date - start_date
          random_days = random.randint(0, delta.days)
          random_date = start_date + timedelta(days=random_days)
          date_str = random_date.strftime('%Y-%m-%d')
          time_str = random_date.strftime('%H:%M:%S')

          url = f'https://api.nasa.gov/planetary/apod?date={date_str}&api_key=DEMO_KEY'
          response = requests.get(url)
          
          if response.status_code == 200:
              data = response.json()
              
              # Veriyi kaydet
              dir_path = f'apod_data/{random_date.year}/{random_date.month:02d}'
              os.makedirs(dir_path, exist_ok=True)
              file_path = f'{dir_path}/{random_date.day:02d}.json'
              with open(file_path, 'w') as f:
                  json.dump(data, f, indent=2)
              
              # Tüm APOD verilerini indexle
              all_apods = []
              for file in glob.glob('apod_data/**/*.json', recursive=True):
                  with open(file) as f:
                      apod = json.load(f)
                      apod['path'] = file
                      all_apods.append(apod)
              
              # Tarihe göre sırala
              all_apods.sort(key=lambda x: x['date'], reverse=True)
              
              # Index dosyasını oluştur
              with open('apod_index.json', 'w') as f:
                  json.dump(all_apods, f, indent=2)

              # Çıktıyı ayarla
              with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
                  print(f'commit_date={date_str} {time_str}', file=fh)
              print(f'Successfully saved APOD data and updated index')
          else:
              print(f'Error fetching data for {date_str}: {response.status_code}')
              exit(1)
          "

      - name: Commit and push changes
        run: |
          git config --global user.name "ali-han"
          git config --global user.email "42784461+ali-han@users.noreply.github.com"
          git add apod_data/ apod_index.json
          GIT_COMMITTER_DATE="${{ steps.fetch_data.outputs.commit_date }}" \
          git commit --date="${{ steps.fetch_data.outputs.commit_date }}" \
          -m "Add APOD data for ${{ steps.fetch_data.outputs.commit_date }} + update index"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}